{"version":3,"sources":["candy-machine.ts","Home.tsx","MiddleHeading.jsx","LastHeading.jsx","LastContent.jsx","Map.jsx","Footer.jsx","cards.jsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CANDY_MACHINE_PROGRAM","anchor","PublicKey","SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID","TOKEN_METADATA_PROGRAM_ID","awaitTransactionSignatureConfirmation","txid","timeout","connection","a","commitment","queryStatus","done","status","slot","confirmations","err","subId","Promise","resolve","reject","setTimeout","console","log","onSignature","result","context","e","error","getSignatureStatuses","signatureStatuses","value","sleep","_signatureSubscriptions","removeSignatureListener","createAssociatedTokenAccountInstruction","associatedTokenAddress","payer","walletAddress","splTokenMintAddress","keys","pubkey","isSigner","isWritable","SystemProgram","programId","TOKEN_PROGRAM_ID","SYSVAR_RENT_PUBKEY","TransactionInstruction","data","Buffer","from","getCandyMachineState","anchorWallet","candyMachineId","provider","preflightCommitment","fetchIdl","idl","program","candyMachine","id","account","fetch","state","itemsAvailable","toNumber","itemsRedeemed","itemsRemaining","goLiveDate","Date","getMasterEdition","mint","findProgramAddress","toBuffer","getMetadata","getTokenWallet","wallet","mintOneToken","config","treasury","Keypair","generate","publicKey","token","metadata","masterEdition","getMinimumBalanceForRentExemption","MintLayout","span","rent","rpc","mintNft","accounts","mintAuthority","updateAuthority","tokenMetadataProgram","tokenProgram","systemProgram","clock","SYSVAR_CLOCK_PUBKEY","signers","instructions","createAccount","fromPubkey","newAccountPubkey","space","lamports","Token","createInitMintInstruction","createMintToInstruction","shortenAddress","address","chars","slice","ms","ConnectButton","styled","WalletDialogButton","CounterText","MintContainer","div","MintButton","Button","renderCounter","days","hours","minutes","seconds","completed","Home","props","useState","balance","setBalance","isActive","setIsActive","isSoldOut","setIsSoldOut","isMinting","setIsMinting","setItemsAvailable","setItemsRedeemed","setItemsRemaining","open","message","severity","undefined","alertState","setAlertState","startDate","setStartDate","useAnchorWallet","setCandyMachine","refreshCandyMachineState","onMint","mintTxId","txTimeout","msg","code","indexOf","getBalance","LAMPORTS_PER_SOL","useEffect","style","backgroundColor","fontSize","textAlign","toBase58","className","src","toLocaleString","width","height","marginTop","marginLeft","color","disabled","onClick","variant","CircularProgress","date","onMount","onComplete","renderer","Snackbar","autoHideDuration","onClose","Alert","MiddleHeading","class","LastHeading","LastContent","myArray","map","curElm","url","alt","Firstline","Seacondline","Thirdline","Fourthline","MapComponent","dangerouslySetInnerHTML","__html","Footer","href","Card","item","avatar_url","login","Cards","list","Object","setItem","GoldsteinScale","_id","Info","og","image","NFT","nft","length","axios","get","then","response","setState","catch","this","React","Component","process","network","Connection","startDateSeed","parseInt","theme","createTheme","palette","type","overrides","MuiButtonBase","root","justifyContent","MuiButton","textTransform","padding","startIcon","marginRight","endIcon","App","endpoint","useMemo","clusterApiUrl","wallets","getPhantomWallet","getSlopeWallet","getSolflareWallet","getSolletWallet","getSolletExtensionWallet","ThemeProvider","autoConnect","Map","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76afdbef.chunk.js","sourcesContent":["import * as anchor from \"@project-serum/anchor\";\n\nimport {\n  MintLayout,\n  TOKEN_PROGRAM_ID,\n  Token,\n} from \"@solana/spl-token\";\n\nexport const CANDY_MACHINE_PROGRAM = new anchor.web3.PublicKey(\n  \"cndyAnrLdpjq1Ssp1z8xxDsB8dxe7u4HL5Nxi2K5WXZ\"\n);\n\nconst SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID = new anchor.web3.PublicKey(\n  \"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL\"\n);\n\nconst TOKEN_METADATA_PROGRAM_ID = new anchor.web3.PublicKey(\n  \"metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s\"\n);\n\nexport interface CandyMachine {\n  id: anchor.web3.PublicKey,\n  connection: anchor.web3.Connection;\n  program: anchor.Program;\n}\n\ninterface CandyMachineState {\n  candyMachine: CandyMachine;\n  itemsAvailable: number;\n  itemsRedeemed: number;\n  itemsRemaining: number;\n  goLiveDate: Date,\n}\n\nexport const awaitTransactionSignatureConfirmation = async (\n  txid: anchor.web3.TransactionSignature,\n  timeout: number,\n  connection: anchor.web3.Connection,\n  commitment: anchor.web3.Commitment = \"recent\",\n  queryStatus = false\n): Promise<anchor.web3.SignatureStatus | null | void> => {\n  let done = false;\n  let status: anchor.web3.SignatureStatus | null | void = {\n    slot: 0,\n    confirmations: 0,\n    err: null,\n  };\n  let subId = 0;\n  status = await new Promise(async (resolve, reject) => {\n    setTimeout(() => {\n      if (done) {\n        return;\n      }\n      done = true;\n      console.log(\"Rejecting for timeout...\");\n      reject({ timeout: true });\n    }, timeout);\n    try {\n      subId = connection.onSignature(\n        txid,\n        (result: any, context: any) => {\n          done = true;\n          status = {\n            err: result.err,\n            slot: context.slot,\n            confirmations: 0,\n          };\n          if (result.err) {\n            console.log(\"Rejected via websocket\", result.err);\n            reject(status);\n          } else {\n            console.log(\"Resolved via websocket\", result);\n            resolve(status);\n          }\n        },\n        commitment\n      );\n    } catch (e) {\n      done = true;\n      console.error(\"WS error in setup\", txid, e);\n    }\n    while (!done && queryStatus) {\n      // eslint-disable-next-line no-loop-func\n      (async () => {\n        try {\n          const signatureStatuses = await connection.getSignatureStatuses([\n            txid,\n          ]);\n          status = signatureStatuses && signatureStatuses.value[0];\n          if (!done) {\n            if (!status) {\n              console.log(\"REST null result for\", txid, status);\n            } else if (status.err) {\n              console.log(\"REST error for\", txid, status);\n              done = true;\n              reject(status.err);\n            } else if (!status.confirmations) {\n              console.log(\"REST no confirmations for\", txid, status);\n            } else {\n              console.log(\"REST confirmation for\", txid, status);\n              done = true;\n              resolve(status);\n            }\n          }\n        } catch (e) {\n          if (!done) {\n            console.log(\"REST connection error: txid\", txid, e);\n          }\n        }\n      })();\n      await sleep(2000);\n    }\n  });\n\n  //@ts-ignore\n  if (connection._signatureSubscriptions[subId]) {\n    connection.removeSignatureListener(subId);\n  }\n  done = true;\n  console.log(\"Returning status\", status);\n  return status;\n}\n\n/* export */ const createAssociatedTokenAccountInstruction = (\n  associatedTokenAddress: anchor.web3.PublicKey,\n  payer: anchor.web3.PublicKey,\n  walletAddress: anchor.web3.PublicKey,\n  splTokenMintAddress: anchor.web3.PublicKey\n) => {\n  const keys = [\n    { pubkey: payer, isSigner: true, isWritable: true },\n    { pubkey: associatedTokenAddress, isSigner: false, isWritable: true },\n    { pubkey: walletAddress, isSigner: false, isWritable: false },\n    { pubkey: splTokenMintAddress, isSigner: false, isWritable: false },\n    {\n      pubkey: anchor.web3.SystemProgram.programId,\n      isSigner: false,\n      isWritable: false,\n    },\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    {\n      pubkey: anchor.web3.SYSVAR_RENT_PUBKEY,\n      isSigner: false,\n      isWritable: false,\n    },\n  ];\n  return new anchor.web3.TransactionInstruction({\n    keys,\n    programId: SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\n    data: Buffer.from([]),\n  });\n}\n\nexport const getCandyMachineState = async (\n  anchorWallet: anchor.Wallet,\n  candyMachineId: anchor.web3.PublicKey,\n  connection: anchor.web3.Connection,\n): Promise<CandyMachineState> => {\n  const provider = new anchor.Provider(connection, anchorWallet, {\n    preflightCommitment: \"recent\",\n  });\n\n  const idl = await anchor.Program.fetchIdl(\n    CANDY_MACHINE_PROGRAM,\n    provider\n  );\n\n  const program = new anchor.Program(idl, CANDY_MACHINE_PROGRAM, provider);\n  const candyMachine = {\n    id: candyMachineId,\n    connection,\n    program,\n  }\n\n  const state: any = await program.account.candyMachine.fetch(candyMachineId);\n\n  const itemsAvailable = state.data.itemsAvailable.toNumber();\n  const itemsRedeemed = state.itemsRedeemed.toNumber();\n  const itemsRemaining = itemsAvailable - itemsRedeemed;\n\n  console.log(state.data)\n\n  let goLiveDate = state.data.goLiveDate.toNumber();\n  goLiveDate = new Date(goLiveDate * 1000);\n\n  console.log({\n    itemsAvailable,\n    itemsRedeemed,\n    itemsRemaining,\n    goLiveDate,\n  })\n\n  return {\n    candyMachine,\n    itemsAvailable,\n    itemsRedeemed,\n    itemsRemaining,\n    goLiveDate,\n  };\n}\n\nconst getMasterEdition = async (\n  mint: anchor.web3.PublicKey\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from(\"metadata\"),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n        Buffer.from(\"edition\"),\n      ],\n      TOKEN_METADATA_PROGRAM_ID\n    )\n  )[0];\n};\n\nconst getMetadata = async (\n  mint: anchor.web3.PublicKey\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from(\"metadata\"),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n      ],\n      TOKEN_METADATA_PROGRAM_ID\n    )\n  )[0];\n};\n\nconst getTokenWallet = async (\n  wallet: anchor.web3.PublicKey,\n  mint: anchor.web3.PublicKey\n) => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [wallet.toBuffer(), TOKEN_PROGRAM_ID.toBuffer(), mint.toBuffer()],\n      SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID\n    )\n  )[0];\n};\n\nexport const mintOneToken = async (\n  candyMachine: CandyMachine,\n  config: anchor.web3.PublicKey, // feels like this should be part of candyMachine?\n  payer: anchor.web3.PublicKey,\n  treasury: anchor.web3.PublicKey,\n): Promise<string> => {\n  const mint = anchor.web3.Keypair.generate();\n  const token = await getTokenWallet(payer, mint.publicKey);\n  const { connection, program } = candyMachine;\n  const metadata = await getMetadata(mint.publicKey);\n  const masterEdition = await getMasterEdition(mint.publicKey);\n\n  const rent = await connection.getMinimumBalanceForRentExemption(\n    MintLayout.span\n  );\n\n  return await program.rpc.mintNft({\n    accounts: {\n      config,\n      candyMachine: candyMachine.id,\n      payer: payer,\n      wallet: treasury,\n      mint: mint.publicKey,\n      metadata,\n      masterEdition,\n      mintAuthority: payer,\n      updateAuthority: payer,\n      tokenMetadataProgram: TOKEN_METADATA_PROGRAM_ID,\n      tokenProgram: TOKEN_PROGRAM_ID,\n      systemProgram: anchor.web3.SystemProgram.programId,\n      rent: anchor.web3.SYSVAR_RENT_PUBKEY,\n      clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\n    },\n    signers: [mint],\n    instructions: [\n      anchor.web3.SystemProgram.createAccount({\n        fromPubkey: payer,\n        newAccountPubkey: mint.publicKey,\n        space: MintLayout.span,\n        lamports: rent,\n        programId: TOKEN_PROGRAM_ID,\n      }),\n      Token.createInitMintInstruction(\n        TOKEN_PROGRAM_ID,\n        mint.publicKey,\n        0,\n        payer,\n        payer\n      ),\n      createAssociatedTokenAccountInstruction(\n        token,\n        payer,\n        payer,\n        mint.publicKey\n      ),\n      Token.createMintToInstruction(\n        TOKEN_PROGRAM_ID,\n        mint.publicKey,\n        token,\n        payer,\n        [],\n        1\n      ),\n    ],\n  });\n}\n\nexport const shortenAddress = (address: string, chars = 4): string => {\n  return `${address.slice(0, chars)}...${address.slice(-chars)}`;\n};\n\nconst sleep = (ms: number): Promise<void> => {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}","import { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Countdown from \"react-countdown\";\r\nimport { Button, CircularProgress, Snackbar } from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nimport * as anchor from \"@project-serum/anchor\";\r\n\r\nimport { LAMPORTS_PER_SOL } from \"@solana/web3.js\";\r\n\r\nimport { useAnchorWallet } from \"@solana/wallet-adapter-react\";\r\nimport { WalletDialogButton } from \"@solana/wallet-adapter-material-ui\";\r\n\r\nimport {\r\n  CandyMachine,\r\n  awaitTransactionSignatureConfirmation,\r\n  getCandyMachineState,\r\n  mintOneToken,\r\n  shortenAddress,\r\n} from \"./candy-machine\";\r\nimport TopParagraph from \"./TopParagraph\";\r\n\r\nconst ConnectButton = styled(WalletDialogButton)``;\r\n\r\nconst CounterText = styled.span``; // add your styles here\r\n\r\nconst MintContainer = styled.div``; // add your styles here\r\n\r\nconst MintButton = styled(Button)``; // add your styles here\r\n\r\nexport interface HomeProps {\r\n  candyMachineId: anchor.web3.PublicKey;\r\n  config: anchor.web3.PublicKey;\r\n  connection: anchor.web3.Connection;\r\n  startDate: number;\r\n  treasury: anchor.web3.PublicKey;\r\n  txTimeout: number;\r\n}\r\n\r\nconst Home = (props: HomeProps) => {\r\n  const [balance, setBalance] = useState<number>();\r\n  const [isActive, setIsActive] = useState(false); // true when countdown completes\r\n  const [isSoldOut, setIsSoldOut] = useState(false); // true when items remaining is zero\r\n  const [isMinting, setIsMinting] = useState(false); // true when user got to press MINT\r\n\r\n  const [itemsAvailable, setItemsAvailable] = useState(0);\r\n  const [itemsRedeemed, setItemsRedeemed] = useState(0);\r\n  const [itemsRemaining, setItemsRemaining] = useState(0);\r\n\r\n  const [alertState, setAlertState] = useState<AlertState>({\r\n    open: false,\r\n    message: \"\",\r\n    severity: undefined,\r\n  });\r\n\r\n  const [startDate, setStartDate] = useState(new Date(props.startDate));\r\n\r\n  const wallet = useAnchorWallet();\r\n  const [candyMachine, setCandyMachine] = useState<CandyMachine>();\r\n\r\n  const refreshCandyMachineState = () => {\r\n    (async () => {\r\n      if (!wallet) return;\r\n\r\n      const {\r\n        candyMachine,\r\n        goLiveDate,\r\n        itemsAvailable,\r\n        itemsRemaining,\r\n        itemsRedeemed,\r\n      } = await getCandyMachineState(\r\n        wallet as anchor.Wallet,\r\n        props.candyMachineId,\r\n        props.connection\r\n      );\r\n\r\n      setItemsAvailable(itemsAvailable);\r\n      setItemsRemaining(itemsRemaining);\r\n      setItemsRedeemed(itemsRedeemed);\r\n\r\n      setIsSoldOut(itemsRemaining === 0);\r\n      setStartDate(goLiveDate);\r\n      setCandyMachine(candyMachine);\r\n    })();\r\n  };\r\n\r\n  const onMint = async () => {\r\n    try {\r\n      setIsMinting(true);\r\n      if (wallet && candyMachine?.program) {\r\n        const mintTxId = await mintOneToken(\r\n          candyMachine,\r\n          props.config,\r\n          wallet.publicKey,\r\n          props.treasury\r\n        );\r\n\r\n        const status = await awaitTransactionSignatureConfirmation(\r\n          mintTxId,\r\n          props.txTimeout,\r\n          props.connection,\r\n          \"singleGossip\",\r\n          false\r\n        );\r\n\r\n\r\n\r\n        if (!status?.err) {\r\n          setAlertState({\r\n            open: true,\r\n            message: \"Congratulations! Mint succeeded!\",\r\n            severity: \"success\",\r\n          });\r\n\r\n        } else {\r\n          setAlertState({\r\n            open: true,\r\n            message: \"Mint failed! Please try again!\",\r\n            severity: \"error\",\r\n          });\r\n        }\r\n      }\r\n    } catch (error: any) {\r\n      // TODO: blech:\r\n      let message = error.msg || \"Minting failed! Please try again!\";\r\n      if (!error.msg) {\r\n        if (error.message.indexOf(\"0x138\")) {\r\n        } else if (error.message.indexOf(\"0x137\")) {\r\n          message = `SOLD OUT!`;\r\n        } else if (error.message.indexOf(\"0x135\")) {\r\n          message = `Insufficient funds to mint. Please fund your wallet.`;\r\n        }\r\n      } else {\r\n        if (error.code === 311) {\r\n          message = `SOLD OUT!`;\r\n          setIsSoldOut(true);\r\n        } else if (error.code === 312) {\r\n          message = `Minting period hasn't started yet.`;\r\n        }\r\n      }\r\n\r\n      setAlertState({\r\n        open: true,\r\n        message,\r\n        severity: \"error\",\r\n      });\r\n    } finally {\r\n      if (wallet) {\r\n        const balance = await props.connection.getBalance(wallet.publicKey);\r\n        setBalance(balance / LAMPORTS_PER_SOL);\r\n      }\r\n      setIsMinting(false);\r\n      refreshCandyMachineState();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (wallet) {\r\n        const balance = await props.connection.getBalance(wallet.publicKey);\r\n        setBalance(balance / LAMPORTS_PER_SOL);\r\n      }\r\n    })();\r\n  }, [wallet, props.connection]);\r\n\r\n  useEffect(refreshCandyMachineState, [\r\n    wallet,\r\n    props.candyMachineId,\r\n    props.connection,\r\n  ]);\r\n\r\n  return (\r\n    <main>\r\n      \r\n      {wallet && (<p style={{backgroundColor:\"#323663\", fontSize: \"25px\",textAlign: \"center\"}}>Wallet {shortenAddress(wallet.publicKey.toBase58() || \"\")}</p>\r\n      )}\r\n      {wallet && <img className=\"vc\" src=\"https://saviour-nfts.s3.amazonaws.com/child_education.jpeg\"></img>}\r\n      \r\n      {wallet && <p className=\"mon3\"><p className=\"conti\"><p className=\"boxi\"><p className=\"rr\">{(balance || 0).toLocaleString()}</p> <br></br><p className=\"rr1\">&nbsp;&nbsp;</p> <br></br><p className=\"rr2\">Balance</p></p></p></p>}\r\n     \r\n\r\n      {wallet && <p className=\"mon \"   ><p  className=\"conti\"><p className=\"boxi\"><p className=\"xx1\">{itemsAvailable}</p> <br></br><p className=\"xx2\"> Total Available </p></p></p></p>}\r\n\r\n      {wallet && <p  className=\"mon1\"  ><p className=\"conti\"><p className=\"boxi\"><p className=\"xx1\"> {itemsRedeemed}</p> <br></br><p className=\"xx2\">Redeemed</p></p></p></p> }\r\n\r\n      {wallet && <p className=\"mon2\"  ><p className=\"conti\"><p className=\"boxi\"><p className=\"xx1\">{itemsRemaining}</p> <br></br><p className=\"xx2\">Remaining</p></p></p></p> }\r\n      {wallet &&<><p  className=\"ld1\" > Girl Child Education NFT is automatically generated using GDELT news reporting and AI. Do you want to make a meaningful societal contributions using digital Art?\r\n      Then start minting the NFT.Every purchase goes to NGOs in India\r\n     which are working towards education and empowerment of girl childs.Show your support.\r\n      </p></>}\r\n      <MintContainer>\r\n        {!wallet && <img style={{width:\"1530px\",height:\"351px\",marginTop:\"0px\",marginLeft:\"-20px\"}} src=\"https://pbs.twimg.com/profile_banners/1488260833738170371/1643683042/1500x500\"></img>}\r\n        {!wallet ? (\r\n          <ConnectButton style={{marginLeft:\"1350px\",marginTop:\"-660px\"}}>Connect Wallet</ConnectButton>\r\n        \r\n        ) : (\r\n          <MintButton style={{marginTop:\"50px\", marginLeft:\"980px\", backgroundColor:\"#323663\", color: \"white\",fontSize:\"24px\", width:\"210px\",height:\"60px\"}}\r\n            disabled={isSoldOut || isMinting || !isActive}\r\n            onClick={onMint}\r\n            variant=\"contained\"\r\n          >\r\n            {isSoldOut ? (\r\n              \"SOLD OUT\"\r\n            ) : isActive ? (\r\n              isMinting ? (\r\n                <CircularProgress />\r\n              ) : (\r\n                <p style={{textAlign:\"center\",marginLeft:\"50px\"}}>MINT</p>\r\n              )\r\n            ) : (\r\n              <Countdown\r\n                date={startDate}\r\n                onMount={({ completed }) => completed && setIsActive(true)}\r\n                onComplete={() => setIsActive(true)}\r\n                renderer={renderCounter}\r\n              />\r\n            )}\r\n          </MintButton>\r\n        )}\r\n      </MintContainer>\r\n    \r\n      <Snackbar\r\n        open={alertState.open}\r\n        autoHideDuration={6000}\r\n        onClose={() => setAlertState({ ...alertState, open: false })}\r\n      >\r\n        <Alert\r\n          onClose={() => setAlertState({ ...alertState, open: false })}\r\n          severity={alertState.severity}\r\n        >\r\n          {alertState.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </main>\r\n  );\r\n};\r\n\r\ninterface AlertState {\r\n  open: boolean;\r\n  message: string;\r\n  severity: \"success\" | \"info\" | \"warning\" | \"error\" | undefined;\r\n}\r\n\r\nconst renderCounter = ({ days, hours, minutes, seconds, completed }: any) => {\r\n  return (\r\n    <CounterText>\r\n      {hours + (days || 0) * 24} hours, {minutes} minutes, {seconds} seconds\r\n    </CounterText>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nfunction MiddleHeading(){\r\n    return <div>\r\n       <h1 class=\"op\"></h1>\r\n        </div>\r\n};\r\nexport default MiddleHeading\r\n ","import React from \"react\";\r\nfunction LastHeading(){\r\n    return <h1 class=\"op9\" >All Collections</h1>;}\r\nexport default LastHeading;","import React, { useState } from \"react\";\r\nconst LastContent = ()=>{\r\n    const data =[\r\n       \r\n    ]\r\n    console.log(data);\r\n    const [myArray]= useState(data);\r\n    return(\r\n        <>\r\n        {\r\n            myArray.map((curElm)=>{\r\n               return <table>\r\n                   <tr>\r\n                       <td>\r\n                       <div className=\"body\">\r\n        <div className=\"container\">\r\n            <div className=\"box\">\r\n            <img className=\"jj\" src ={curElm.url} alt=\"random\" ></img>\r\n            <h1 className=\"cc\">{curElm. Firstline}</h1>\r\n            <h3 className=\"dd\">{curElm. Seacondline}</h3>\r\n            <h3 className=\"nn\">{curElm.Thirdline}</h3>\r\n            <h3 className=\"mm\">{curElm.Fourthline}</h3>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n                       </td>\r\n                       <td>\r\n                       <div className=\"body\">\r\n        <div className=\"container\" style={{marginLeft:\"-750px\"}}>\r\n            <div className=\"box\">\r\n            <img className=\"jj\" src ={curElm.url} alt=\"random\" ></img>\r\n            <h1 className=\"cc\">{curElm. Firstline}</h1>\r\n            <h3 className=\"dd\">{curElm. Seacondline}</h3>\r\n            <h3 className=\"nn\">{curElm.Thirdline}</h3>\r\n            <h3 className=\"mm\">{curElm.Fourthline}</h3>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n                       </td>\r\n                       <td>\r\n                       <div className=\"body\">\r\n        <div className=\"container\" style={{marginLeft:\"-750px\"}}>\r\n            <div className=\"box\">\r\n            <img className=\"jj\" src ={curElm.url} alt=\"random\" ></img>\r\n            <h1 className=\"cc\">{curElm. Firstline}</h1>\r\n            <h3 className=\"dd\">{curElm. Seacondline}</h3>\r\n            <h3 className=\"nn\">{curElm.Thirdline}</h3>\r\n            <h3 className=\"mm\">{curElm.Fourthline}</h3>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n                       </td>\r\n                       \r\n                   </tr>\r\n               </table>\r\n\r\n            })\r\n        }\r\n        </>\r\n    )\r\n}\r\nexport default LastContent","\nimport React from \"react\";\nimport \"./App.css\";\n\nconst iframe = \"<iframe style='background: #040A58;border: none;border-radius: 2px;box-shadow: 0 2px 10px 0 rgba(70, 76, 79, .2);' width='720' height='480' src='https://charts.mongodb.com/charts-project-0-laewp/embed/charts?id=6272c0d3-b5d9-4d56-8679-d9af255c76d6&maxDataAge=3600&theme=light&autoRefresh=true'></iframe>\"\n\nfunction MapComponent(){\n    return <div className=\"row-map\">\n    <div className=\"block-map\" style={{\"vertical-align\":\"middle\"}} dangerouslySetInnerHTML={ createMarkup()} />\n   <div className=\"block-map-text\">\n    <p>\n    <h1>What is Saviour?</h1>\nSaviour exploits the power of GDELT dataset and Web3/Solana to give people the means to raise funds, help others overcome hardship and meet aspirational goals. With crowdfunding, you can help a friend or an entire community. You can do anything from paying for your own operation to fulfilling a student’s dream of going to university – and so much more.\n\nIf you’ve ever found yourself wondering, “What exactly is crowdfunding?” or “What are the benefits of crowdfunding?”, then read on! We’ll answer your questions about crowdfunding and give you tips on how to bring in donations.\n\n    </p>\n   \n \n </div>\n  </div>\n} \n\nfunction createMarkup() {\n    return {__html: iframe};\n  }\n\n\nexport default MapComponent;\n\n\n","import react from \"react\";\nfunction Footer(){\n    return(\n        <div class=\"vb\">\n             <div class=\"f-container\">\n                 <div class=\"footer\">\n                     <div class=\"footer-h footer1\">\n                         <h2 class=\"xx\"> About Us</h2>\n                         <a class=\"xx\" href=\"#\" >Blog</a>\n                         <a class=\"xx\" href=\"#\">Demo</a>\n                         <a class=\"xx\" href=\"#\">Purchases</a>\n                         <a class=\"xx\" href=\"#\">Terms Of Service</a>\n                     </div>\n                     <div class=\"footer-h footer2\">\n                         <h2 class=\"xx\">Contact Us</h2>\n                         <a href=\"#\" class=\"xx\">Jobs</a>\n                         <a class=\"xx\" href=\"#\">Support</a>\n                         <a class=\"xx\" href=\"#\">Contact</a>\n                         <a class=\"xx\" href=\"#\">Sponserships</a>\n                     </div>\n                     <div class=\"footer-h footer3\">\n                         <h2 class=\"xx\">Social Media</h2>\n                         <a class=\"xx\" href=\"#\">Instagram</a>\n                         <a class=\"xx\" href=\"#\">Demo</a>\n                         <a class=\"xx\" href=\"#\">Purchases</a>\n                         <a class=\"xx\" href=\"#\">Terms Of Service</a>\n                     </div>\n                 </div>\n             </div>\n             </div>\n    );\n\n};\nexport default Footer","import React from \"react\";\nimport \"./cards.css\";\nimport axios from \"axios\";\n\nfunction Card(props){\n    console.log(props);\n     return(\n        <div  className=\"card\">\n                  <img className=\"imgRes\" src={props.item.avatar_url} alt=\"...\"/>\n                  <div className=\"caption\">\n                      <h5>{props.item.login}</h5>\n                      <div className=\"email\">{props.item.login}_{props.item.id}@email.com</div>\n                      <div ><b>GDELT</b></div>\n                      <footer>\n                          <button className=\"btn btn-default text-left\" > \n                          Following\n                          </button>\n                          <button className=\"btn btn-default\" > \n                          Followers\n                          </button>\n                      </footer>\n                  </div>\n              </div>\n      )\n  }\n  \n  function Cards (props) {\n   console.log(props);\n   const list=  Object.keys(props.data).map((list)=>{          \n      let setItem={\n        login:props.data[list].GoldsteinScale,\n        id:props.data[list]._id,\n        avatar_url:props.data[list].Info.og.image\n      };\n      \n     return <Card key={props.data[list].id} item={setItem}/>\n    });  \n    return (<div className=\"Cards\">{list}</div>);\n  }\n  \n  class NFT extends React.Component {\n     constructor(props) {\n      super(props);\n      this.state={\n      nft:'',\n        length:0\n    };\n     }\n    componentDidMount(){\n        axios.get('https://us-east-1.aws.data.mongodb-api.com/app/saviour-ui-avjoa/endpoint/latest')\n        .then(response => {      \n          console.log(response.data) \n          this.setState({ nft: response.data,length:response.data.length });\n        })\n        .catch(function (error) {\n          //console.log(\"err\"+\" \"+error);\n        })\n      }\n    render() {\n  \n      return (\n        <div className=\"container-fluid\">\n      <div className=\"row\">\n          <div className=\"col-sm-12 col-md-12 \">  \n        {this.state.length>0?(<Cards  data={this.state.nft}/>):''}      \n          </div>\n      </div>\n  </div>\n      );\n    }\n  }\n\n  export default NFT;\n  ","import \"./index.css\";\r\nimport { useMemo } from \"react\";\r\n\r\nimport Home from \"./Home\";\r\n\r\nimport  TopContent1 from \"./TopContent1\";\r\n\r\nimport MiddleHeading from \"./MiddleHeading\";\r\nimport LastHeading from \"./LastHeading\";\r\nimport LastContent from \"./LastContent\";\r\nimport MapComponent from \"./Map\";\r\n\r\n\r\nimport Footer from \"./Footer\";\r\n\r\n\r\n\r\nimport * as anchor from \"@project-serum/anchor\";\r\nimport { clusterApiUrl } from \"@solana/web3.js\";\r\nimport { WalletAdapterNetwork } from \"@solana/wallet-adapter-base\";\r\nimport {\r\n  getPhantomWallet,\r\n  getSlopeWallet,\r\n  getSolflareWallet,\r\n  getSolletWallet,\r\n  getSolletExtensionWallet,\r\n} from \"@solana/wallet-adapter-wallets\";\r\n\r\nimport {\r\n  ConnectionProvider,\r\n  WalletProvider,\r\n} from \"@solana/wallet-adapter-react\";\r\n\r\nimport { WalletDialogProvider } from \"@solana/wallet-adapter-material-ui\";\r\nimport { createTheme, ThemeProvider } from \"@material-ui/core\";\r\nimport NFT from \"./cards\";\r\n\r\n\r\n\r\n\r\n\r\nconst treasury = new anchor.web3.PublicKey(\r\n  process.env.REACT_APP_TREASURY_ADDRESS!\r\n);\r\n\r\nconst config = new anchor.web3.PublicKey(\r\n  process.env.REACT_APP_CANDY_MACHINE_CONFIG!\r\n);\r\n\r\nconst candyMachineId = new anchor.web3.PublicKey(\r\n  process.env.REACT_APP_CANDY_MACHINE_ID!\r\n);\r\n\r\nconst network = process.env.REACT_APP_SOLANA_NETWORK as WalletAdapterNetwork;\r\n\r\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST!;\r\nconst connection = new anchor.web3.Connection(rpcHost);\r\n\r\nconst startDateSeed = parseInt(process.env.REACT_APP_CANDY_START_DATE!, 10);\r\n\r\nconst txTimeout = 30000; // milliseconds (confirm this works for your project)\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        type: 'dark',\r\n    },\r\n    overrides: {\r\n        MuiButtonBase: {\r\n            root: {\r\n                justifyContent: 'flex-start',\r\n            },\r\n        },\r\n        MuiButton: {\r\n            root: {\r\n                textTransform: undefined,\r\n                padding: '12px 16px',\r\n            },\r\n            startIcon: {\r\n                marginRight: 8,\r\n            },\r\n            endIcon: {\r\n                marginLeft: 8,\r\n            },\r\n        },\r\n    },\r\n});\r\n\r\nconst App = () => {\r\n  const endpoint = useMemo(() => clusterApiUrl(network), []);\r\n\r\n  const wallets = useMemo(\r\n    () => [\r\n        getPhantomWallet(),\r\n        getSlopeWallet(),\r\n        getSolflareWallet(),\r\n        getSolletWallet({ network }),\r\n        getSolletExtensionWallet({ network })\r\n    ],\r\n    []\r\n  );\r\n\r\n  return (\r\n    \r\n      <ThemeProvider theme={theme}>\r\n        <ConnectionProvider endpoint={endpoint}>\r\n          <WalletProvider wallets={wallets} autoConnect={true}>\r\n            <WalletDialogProvider>\r\n          \r\n              <Home\r\n                candyMachineId={candyMachineId}\r\n                config={config}\r\n                connection={connection}\r\n                startDate={startDateSeed}\r\n                treasury={treasury}\r\n                txTimeout={txTimeout}\r\n              />\r\n                \r\n      \r\n       \r\n          \r\n    \r\n            <MiddleHeading></MiddleHeading>\r\n            <MapComponent></MapComponent>\r\n        \r\n            \r\n            <LastHeading></LastHeading>\r\n            <NFT></NFT>\r\n            <LastContent></LastContent>  \r\n            <Footer></Footer>\r\n            \r\n              \r\n             \r\n            </WalletDialogProvider>\r\n          </WalletProvider>\r\n        </ConnectionProvider>\r\n      </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// axios \r\nreportWebVitals();\r\n"],"sourceRoot":""}